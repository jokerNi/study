1 $1 $2 are the arguments
  $# is the num of the arguments
2 judgement 
    if [ $# -eq 0 ];then
3
    switch case in bash

    case $1 in
    -help)
    echo help
    ;;
    esac  //the syntax of bash is interesting( the end of "if" is "fi";the end of "case" is "esac");
    注意：每次case完，后要加两个分号

4 output large section char
  cat <<\EOF
  Usage: depcomp [--help] [--version] PROGRAM [ARGS]
  
  Run PROGRAMS ARGS to compile a file, generating dependencies
  as side-effects.
  
 Environment variables:
 depmode     Dependency tracking mode.
 source      Source file read by `PROGRAMS ARGS'.
 object      Object file output by `PROGRAMS ARGS'.
 DEPDIR      directory where to store dependencies.
 depfile     Dependency file to output.
 tmpdepfile  Temporary file to use when outputing
 dependencies.
 libtool     Whether libtool is used (yes/no).
    
 Report bugs to <bug-automake@gnu.org>.
EOF
5 echo -e 之后可以输出转义字符

6 sed '$d' '1d' kk
     将文件kk中的数据输出到标准输出，并且没有最后一行和第一行

#7 bash script 中的格式化输出
    
    printf "%3d" "$i" 

#8 bash 中的转义字符

    echo -e "at_ogps=2\\r" > /dev/ttyHS1 -e 是为了识别转义字符
    echo -e \\b 退格
 
#9 while getopts a:c:C arg 匹配参数

    arg 参数列表，没写时它会取命令行参数列表
 
#10 cd 'dirname $0'
  在命令行状态下单纯执行 $ cd `dirname $0`
  是毫无意义的。因为他返回当前路径的"."。
  这个命令写在脚本文件里才有作用，他返回这个脚本文件放置的目录，并可以根据这个目录来定位所要运行程序的相对位置（绝对位置除外）


#11

    $? 代表上一个程序或函数返回值
      hello()
      {
          echo heool
          return 3
      }
      
      hello
      echo $?

      输出3
      其他特殊变量，
      $0 这个程序的执行名字

      　　$n 　这个程序的第n个参数值，n=1...9

      　　$*　 这个程序的所有参数

      　　$# 这个程序的参数个数

      　　$$ 这个程序的PID

      　　$! 执行上一个背景指令的PID

      　　$? 上一个指令的返回值 

  #12 将文件中的字符串赋给变量

    aa=$(cat "./moon")
    echo $aa

#13 直接用中括号进行判断
    [ -f "sss" ] && \
    {
         echo 'this sss exit'
    }
    在后边加 && \ 和if 效果一样 , 加|| \ 和 if ！ 一样

#14 bash中的重定向组合
cmd 2>file  把文件描述符2重定向到file，即把错误输出存到file中。
cmd > file 2>&1
把标准错误重定向到标准输出，再重定向到file，即stderr和stdout都被输出到file中
cmd &> file     功能与上一个相同，更为简便的写法。
cmd >& file     功能仍与上一个相同。
cmd > f1 2>f2   把stdout重定向到f1，而把stderr重定向到f2
tee files   把stdout原样输出的同时，复制一份到files中。
tee files   把stderr和stdout都输出到files中，同时输出到屏幕。
